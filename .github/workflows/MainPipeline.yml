name: Template CI/CD Pipeline

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"
  workflow_dispatch:

env:
  REPOSITORY_URL: ${{ github.event.repository.html_url }}
  PIPELINE_URL: ${{ github.run_id }}
  WEBHOOK_DISCORD: https://discord.com/api/webhooks/1265009751855468686/72jOj5C3mr9oeJ5X7Zmue65NROn2unFtkZdUTAmv9ybPQa7vDg_2h-LApMwVHLASnM6c
  WEBHOOK_TEAMS: https://discord.com/api/webhooks/1265009751855468686/72jOj5C3mr9oeJ5X7Zmue65NROn2unFtkZdUTAmv9ybPQa7vDg_2h-LApMwVHLASnM6c
  WEBHOOK_MESSAGE_FILE: ./.github/GithubPipelineNotification.txt

jobs:
  SetupEnvironmentVariable:
    runs-on: ubuntu-latest
    outputs:
      REPOSITORY_URL: ${{ env.REPOSITORY_URL }}
      PIPELINE_URL: ${{ env.PIPELINE_URL }}
      WEBHOOK_DISCORD: ${{ env.WEBHOOK_DISCORD }}
      WEBHOOK_TEAMS: ${{ env.WEBHOOK_TEAMS }}
      WEBHOOK_MESSAGE_FILE: ${{ env.WEBHOOK_MESSAGE_FILE }}

    steps:
      - name: Set Environment Variables
        run: |
            echo "REPOSITORY_URL=${REPOSITORY_URL}" >> $GITHUB_ENV
            echo "PIPELINE_URL=${PIPELINE_URL}" >> $GITHUB_ENV
            echo "WEBHOOK_DISCORD=${WEBHOOK_DISCORD}" >> $GITHUB_ENV
            echo "WEBHOOK_TEAMS=${WEBHOOK_TEAMS}" >> $GITHUB_ENV
            echo "WEBHOOK_MESSAGE_FILE=${WEBHOOK_MESSAGE_FILE}" >> $GITHUB_ENV

  CommitMetadataGetter:
    uses: ./.github/workflows/CommitMetadataGetter.yml

  ClangCodeFormatter:
    needs: [SetupEnvironmentVariable, CommitMetadataGetter]
    uses: ./.github/workflows/ClangCodeFormatter.yml
    with:
      commit_author: ${{ needs.CommitMetadataGetter.outputs.COMMIT_AUTHOR }}
      commit_email: ${{ needs.CommitMetadataGetter.outputs.COMMIT_EMAIL }}

  DocumentationUpdater:
    needs: [SetupEnvironmentVariable, CommitMetadataGetter, ClangCodeFormatter]
    uses: ./.github/workflows/DocumentationUpdater.yml
    with:
      commit_author: ${{ needs.CommitMetadataGetter.outputs.COMMIT_AUTHOR }}
      commit_email: ${{ needs.CommitMetadataGetter.outputs.COMMIT_EMAIL }}

  BuildCheckerLinux:
    needs: [SetupEnvironmentVariable, CommitMetadataGetter, ClangCodeFormatter, DocumentationUpdater]
    uses: ./.github/workflows/BuildCheckerLinux.yml

  BuildCheckerWindows:
    needs: [SetupEnvironmentVariable, CommitMetadataGetter, ClangCodeFormatter, DocumentationUpdater]
    uses: ./.github/workflows/BuildCheckerWindows.yml

  TestsChecker:
    needs: [SetupEnvironmentVariable, CommitMetadataGetter, ClangCodeFormatter, DocumentationUpdater]
    uses: ./.github/workflows/TestsChecker.yml

  NotifyViaWebHookDiscord:
    needs:
      [
        SetupEnvironmentVariable,
        CommitMetadataGetter,
        ClangCodeFormatter,
        DocumentationUpdater,
        BuildCheckerLinux,
        BuildCheckerWindows,
        TestsChecker,
      ]
    uses: ./.github/workflows/WebhookNotifier.yml
    with:
      webhook: ${{ needs.SetupEnvironmentVariable.outputs.WEBHOOK_DISCORD }}
      message_file: ${{ needs.SetupEnvironmentVariable.outputs.WEBHOOK_MESSAGE_FILE }}
      commit_message: ${{ needs.CommitMetadataGetter.outputs.COMMIT_MESSAGE }}
      commit_author: ${{ needs.CommitMetadataGetter.outputs.COMMIT_AUTHOR }}
      commit_email: ${{ needs.CommitMetadataGetter.outputs.COMMIT_EMAIL }}
      commit_hash: ${{ needs.CommitMetadataGetter.outputs.COMMIT_HASH }}
      commit_date: ${{ needs.CommitMetadataGetter.outputs.COMMIT_DATE }}
      linux_build_status: ${{ needs.BuildCheckerLinux.outputs.LINUX_BUILD_STATUS }}
      windows_build_status: ${{ needs.BuildCheckerWindows.outputs.WINDOWS_BUILD_STATUS }}
      format_updated: ${{ needs.ClangCodeFormatter.outputs.FORMAT_UPDATED }}
      docs_updated: ${{ needs.DocumentationUpdater.outputs.DOCS_UPDATED }}
      tests_status: ${{ needs.TestsChecker.outputs.TESTS_STATUS }}
      coverage_value: ${{ needs.TestsChecker.outputs.COVERAGE_VALUE }}
      branches_coverage_value: ${{ needs.TestsChecker.outputs.BRANCHES_COVERAGE_VALUE }}
      repository_url: ${{ needs.SetupEnvironmentVariable.outputs.REPOSITORY_URL }}
      pipeline_url: ${{ needs.SetupEnvironmentVariable.outputs.PIPELINE_URL }}

  NotifyViaWebHookTeams:
    needs:
      [
        SetupEnvironmentVariable,
        CommitMetadataGetter,
        ClangCodeFormatter,
        DocumentationUpdater,
        BuildCheckerLinux,
        BuildCheckerWindows,
        TestsChecker,
      ]
    uses: ./.github/workflows/WebhookNotifier.yml
    with:
      webhook: ${{ needs.SetupEnvironmentVariable.outputs.WEBHOOK_TEAMS }}
      message_file: ${{ needs.SetupEnvironmentVariable.outputs.WEBHOOK_MESSAGE_FILE }}
      commit_message: ${{ needs.CommitMetadataGetter.outputs.COMMIT_MESSAGE }}
      commit_author: ${{ needs.CommitMetadataGetter.outputs.COMMIT_AUTHOR }}
      commit_email: ${{ needs.CommitMetadataGetter.outputs.COMMIT_EMAIL }}
      commit_hash: ${{ needs.CommitMetadataGetter.outputs.COMMIT_HASH }}
      commit_date: ${{ needs.CommitMetadataGetter.outputs.COMMIT_DATE }}
      linux_build_status: ${{ needs.BuildCheckerLinux.outputs.LINUX_BUILD_STATUS }}
      windows_build_status: ${{ needs.BuildCheckerWindows.outputs.WINDOWS_BUILD_STATUS }}
      format_updated: ${{ needs.ClangCodeFormatter.outputs.FORMAT_UPDATED }}
      docs_updated: ${{ needs.DocumentationUpdater.outputs.DOCS_UPDATED }}
      tests_status: ${{ needs.TestsChecker.outputs.TESTS_STATUS }}
      coverage_value: ${{ needs.TestsChecker.outputs.COVERAGE_VALUE }}
      branches_coverage_value: ${{ needs.TestsChecker.outputs.BRANCHES_COVERAGE_VALUE }}
      repository_url: ${{ needs.SetupEnvironmentVariable.outputs.REPOSITORY_URL }}
      pipeline_url: ${{ needs.SetupEnvironmentVariable.outputs.PIPELINE_URL }}
