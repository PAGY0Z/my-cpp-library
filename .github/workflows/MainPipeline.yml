name: Template CI/CD Pipeline

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"
  workflow_dispatch:

env:
  REPOSITORY_URL: ${{ github.event.repository.html_url }}
  PIPELINE_URL: ${{ github.run_id }}
  WEBHOOK_DISCORD: "TEST1"
  WEBHOOK_TEAMS: "TEST2"
  WEBHOOK_MESSAGE_FILE: .github/GithubPipelineNotification.txt

jobs:
  CommitMetadataGetter:
    uses: ./.github/workflows/CommitMetadataGetter.yml

  ClangCodeFormatter:
    needs: [CommitMetadataGetter]
    uses: ./.github/workflows/ClangCodeFormatter.yml
    with:
      commit_author: ${{ needs.CommitMetadataGetter.outputs.COMMIT_AUTHOR }}
      commit_email: ${{ needs.CommitMetadataGetter.outputs.COMMIT_EMAIL }}

  DocumentationUpdater:
    needs: [CommitMetadataGetter, ClangCodeFormatter]
    uses: ./.github/workflows/DocumentationUpdater.yml
    with:
      commit_author: ${{ needs.CommitMetadataGetter.outputs.COMMIT_AUTHOR }}
      commit_email: ${{ needs.CommitMetadataGetter.outputs.COMMIT_EMAIL }}

  BuildCheckerLinux:
    needs: [CommitMetadataGetter, ClangCodeFormatter, DocumentationUpdater]
    uses: ./.github/workflows/BuildCheckerLinux.yml

  BuildCheckerWindows:
    needs: [CommitMetadataGetter, ClangCodeFormatter, DocumentationUpdater]
    uses: ./.github/workflows/BuildCheckerWindows.yml

  TestsChecker:
    needs:
      [
        CommitMetadataGetter,
        ClangCodeFormatter,
        DocumentationUpdater,
        BuildCheckerLinux,
        BuildCheckerWindows,
      ]
    uses: ./.github/workflows/TestsChecker.yml

  NotifyViaWebHookDiscord:
    needs:
      [
        CommitMetadataGetter,
        ClangCodeFormatter,
        DocumentationUpdater,
        BuildCheckerLinux,
        BuildCheckerWindows,
        TestsChecker,
      ]
    uses: ./.github/workflows/WebhookNotifier.yml
    with:
      webhook: $WEBHOOK_DISCORD
      message_file: $WEBHOOK_MESSAGE_FILE
      commit_message: ${{ needs.CommitMetadataGetter.outputs.COMMIT_MESSAGE }}
      commit_author: ${{ needs.CommitMetadataGetter.outputs.COMMIT_AUTHOR }}
      commit_email: ${{ needs.CommitMetadataGetter.outputs.COMMIT_EMAIL }}
      commit_hash: ${{ needs.CommitMetadataGetter.outputs.COMMIT_HASH }}
      commit_date: ${{ needs.CommitMetadataGetter.outputs.COMMIT_DATE }}
      linux_build_status: ${{ needs.BuildCheckerLinux.outputs.LINUX_BUILD_STATUS }}
      windows_build_status: ${{ needs.BuildCheckerWindows.outputs.WINDOWS_BUILD_STATUS }}
      format_updated: ${{ needs.ClangCodeFormatter.outputs.FORMAT_UPDATED }}
      docs_updated: ${{ needs.DocumentationUpdater.outputs.DOCS_UPDATED }}
      tests_status: ${{ needs.TestsChecker.outputs.TESTS_STATUS }}
      coverage_value: ${{ needs.TestsChecker.outputs.COVERAGE_VALUE }}
      branches_coverage_value: ${{ needs.TestsChecker.outputs.BRANCHES_COVERAGE_VALUE }}
      repository_url: $(REPOSITORY_URL)
      pipeline_url: $(PIPELINE_URL)

  NotifyViaWebHookTeams:
    needs:
      [
        CommitMetadataGetter,
        ClangCodeFormatter,
        DocumentationUpdater,
        BuildCheckerLinux,
        BuildCheckerWindows,
        TestsChecker,
      ]
    uses: ./.github/workflows/WebhookNotifier.yml
    with:
      webhook: $WEBHOOK_TEAMS
      message_file: $WEBHOOK_MESSAGE_FILE
      commit_message: ${{ needs.CommitMetadataGetter.outputs.COMMIT_MESSAGE }}
      commit_author: ${{ needs.CommitMetadataGetter.outputs.COMMIT_AUTHOR }}
      commit_email: ${{ needs.CommitMetadataGetter.outputs.COMMIT_EMAIL }}
      commit_hash: ${{ needs.CommitMetadataGetter.outputs.COMMIT_HASH }}
      commit_date: ${{ needs.CommitMetadataGetter.outputs.COMMIT_DATE }}
      linux_build_status: ${{ needs.BuildCheckerLinux.outputs.LINUX_BUILD_STATUS }}
      windows_build_status: ${{ needs.BuildCheckerWindows.outputs.WINDOWS_BUILD_STATUS }}
      format_updated: ${{ needs.ClangCodeFormatter.outputs.FORMAT_UPDATED }}
      docs_updated: ${{ needs.DocumentationUpdater.outputs.DOCS_UPDATED }}
      tests_status: ${{ needs.TestsChecker.outputs.TESTS_STATUS }}
      coverage_value: ${{ needs.TestsChecker.outputs.COVERAGE_VALUE }}
      branches_coverage_value: ${{ needs.TestsChecker.outputs.BRANCHES_COVERAGE_VALUE }}
      repository_url: $(REPOSITORY_URL)
      pipeline_url: $(PIPELINE_URL)
